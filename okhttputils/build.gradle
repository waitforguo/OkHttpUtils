apply plugin: 'com.android.library'
// bintray 添加
apply plugin: 'com.novoda.bintray-release'
// jitpack插件
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.github.waitforguo' // 替换成你的Github的用户名

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
        warning 'InvalidPackage'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.squareup.okhttp3:okhttp:3.8.0'
}

task clearJar(type: Delete) {
    delete 'build/outputs/GLOkHttpUtils-1_0_3.jar'
}

task makeJar(type: Copy) {
    from('build/intermediates/bundles/default/')
    into('build/outputs/')
    include('classes.jar')
    rename('classes.jar', 'GLOkHttpUtils-1_0_3.jar')
}

makeJar.dependsOn(clearJar, build)

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

// 添加
publish {
    userOrg = 'fausgoal'                    // bintray注册的Organizations的名称
    groupId = 'com.fausgoal'                // compile引用时的第1部分groupId
    artifactId = 'GLOkHttpUtils'            // compile引用时的第2部分项目名
    publishVersion = '1.0.3'                // compile引用时的第3部分版本号
    desc = 'This is a okhttp extend library'
    website = 'https://github.com/waitforguo/OkHttpUtils'
}